{"version":3,"sources":["Algorithms/MergeSort.js","Algorithms/ShellSort.js","Algorithms/QuickSortFirst.js","Algorithms/QuickSortLast.js","SortingPanel.js","Algorithms/InsertionSort.js","Algorithms/SelectionSort.js","Algorithms/BubbleSort.js","SortingShow.js","App.js","serviceWorker.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","tempArray","slice","push","doMerge","getShellSortAnimations","gap","temp","shellSort","getQuickSortFirstAnimations","quickSortFirst","start","end","pivotIdx","pivotValue","lower","run","partition","getQuickSortLastAnimations","quickSortLast","currentSmaller","tempx","SortingPanel","props","state","sortingAlgo","handleSort","bind","e","target","value","this","setState","onCompareColor","initialColor","speed","OriginalArray","arrayBars","document","getElementsByClassName","animatingArray","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","insertionSort","getInsertionSortAnimations","smallest","smallestIdx","selectionSort","getSelectionSortAnimations","bubbleSort","getBubbleSortAnimations","className","name","type","min","max","numInArray","onChange","handleSetting","onClick","handleReset","role","Component","SortingShow","width","map","item","index","margin","App","currentAlgo","newArray","random","href","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6efd328b.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\n\t//takes a unsorted array\n\t//initiate a new array for record and animation\n\tconst animations = [];\n\t//if array size is 1, it is sorted, return array without doing merge sort\n\tif (array.length <= 1) return array;\n\t//sort the array using merge sort and return a animation array\n\tmergeSortHelper(array, 0, array.length - 1, animations);\n\treturn animations;\n}\n\nfunction mergeSortHelper(mainArray, startIdx, endIdx, animations) {\n\t// if starting and end is the same, array is sorted, return array\n\tif (startIdx === endIdx) return;\n\t//find out the middle index\n\tconst middleIdx = Math.floor((startIdx + endIdx) / 2);\n\t//calling recursively with first part of the array\n\tmergeSortHelper(mainArray, startIdx, middleIdx, animations);\n\t//calling recursively with second part of the array\n\tmergeSortHelper(mainArray, middleIdx + 1, endIdx, animations);\n\t//once two smaller pieces are ready, merge them\n\tdoMerge(mainArray, startIdx, middleIdx, endIdx, animations);\n}\n\nfunction doMerge(mainArray, startIdx, middleIdx, endIdx, animations) {\n\tlet k = startIdx;\n\tlet i = startIdx;\n\tlet j = middleIdx + 1;\n\tconst tempArray = mainArray.slice();\n\twhile (i <= middleIdx && j <= endIdx) {\n\t\t//comparing i and j, both the start of each array\n\t\t//record it in animation array\n\t\tanimations.push([i, j]);\n\t\tanimations.push([i, j]);\n\t\tif (tempArray[i] <= tempArray[j]) {\n\t\t\tanimations.push([k, tempArray[i]]);\n\t\t\t//following is equivalent to mainArray[k]=auxiliaryArray[i]; k++, i++\n\t\t\t//adjusts the true mainArray\n\t\t\tmainArray[k++] = tempArray[i++];\n\t\t} else {\n\t\t\tanimations.push([k, tempArray[j]]);\n\t\t\tmainArray[k++] = tempArray[j++];\n\t\t}\n\t}\n\t//for cases that one side is smaller than the other side\n\t//just move the sorted items on that side over to mainArray\n\twhile (i <= middleIdx) {\n\t\tanimations.push([k, i]);\n\t\tanimations.push([k, i]);\n\t\tanimations.push([k, tempArray[i]]);\n\t\tmainArray[k++] = tempArray[i++];\n\t}\n\twhile (j <= endIdx) {\n\t\tanimations.push([k, j]);\n\t\tanimations.push([k, j]);\n\t\tanimations.push([k, tempArray[j]]);\n\t\tmainArray[k++] = tempArray[j++];\n\t}\n}\n","export function getShellSortAnimations(array) {\n\tlet animations = [];\n\tshellSort(array, animations);\n\treturn animations;\n}\n\nfunction shellSort(array, animations) {\n\t//initialize a gap and decreases it until 1, which will then perform an insertion sort\n\t// every pass shell sort will ensure the pattern is completely sorted\n\tlet gap = array.length;\n\twhile (gap >= 1) {\n\t\tfor (let i = 0; i < array.length; i += gap) {\n\t\t\tfor (let j = i; j > 0; j -= gap) {\n\t\t\t\tif (array[j] < array[j - gap]) {\n\t\t\t\t\t//animation of swapping the bars to their correct order\n\t\t\t\t\t//to stimulate inserting the bar into the right place\n\t\t\t\t\t//and shifting every bar on its right to the right by one\n\t\t\t\t\tanimations.push([j, j - gap]);\n\t\t\t\t\tanimations.push([j, j - gap]);\n\t\t\t\t\tanimations.push([j, array[j - gap]]);\n\t\t\t\t\tanimations.push([j - gap, array[j]]);\n\t\t\t\t\tlet temp = array[j];\n\t\t\t\t\tarray[j] = array[j - gap];\n\t\t\t\t\tarray[j - gap] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tgap = Math.floor(gap / 2);\n\t}\n}\n","export function getQuickSortFirstAnimations(array) {\n\tconst animations = [];\n\tlet start = 0;\n\tlet end = array.length - 1;\n\tquickSortFirst(array, start, end, animations);\n\treturn animations;\n}\n\nfunction quickSortFirst(array, start, end, animations) {\n\tif (start >= end) {\n\t\treturn;\n\t}\n\tlet pivotIdx = partition(array, start, end, animations);\n\tquickSortFirst(array, start, pivotIdx - 1, animations);\n\tquickSortFirst(array, pivotIdx + 1, end, animations);\n}\n\nfunction partition(array, start, end, animations) {\n\tlet pivotValue = array[start];\n\tlet lower = start + 1;\n\tlet run = true;\n\twhile (run) {\n\t\twhile (array[lower] <= pivotValue && lower <= end) {\n\t\t\tanimations.push([start, lower]);\n\t\t\tanimations.push([start, lower]);\n\t\t\tanimations.push([0, array[0]]);\n\t\t\tanimations.push([0, array[0]]);\n\t\t\tlower += 1;\n\t\t}\n\t\twhile (array[end] >= pivotValue && lower <= end) {\n\t\t\tanimations.push([start, end]);\n\t\t\tanimations.push([start, end]);\n\t\t\tanimations.push([0, array[0]]);\n\t\t\tanimations.push([0, array[0]]);\n\t\t\tend -= 1;\n\t\t}\n\t\tif (end < lower) {\n\t\t\trun = false;\n\t\t} else {\n\t\t\tanimations.push([lower, end]);\n\t\t\tanimations.push([lower, end]);\n\t\t\tanimations.push([lower, array[end]]);\n\t\t\tanimations.push([end, array[lower]]);\n\t\t\tlet temp = array[lower];\n\t\t\tarray[lower] = array[end];\n\t\t\tarray[end] = temp;\n\t\t}\n\t}\n\tanimations.push([start, end]);\n\tanimations.push([start, end]);\n\tanimations.push([start, array[end]]);\n\tanimations.push([end, pivotValue]);\n\tlet temp = array[end];\n\tarray[end] = pivotValue;\n\tarray[start] = temp;\n\treturn end;\n}\n","export function getQuickSortLastAnimations(array) {\n\tconst animations = [];\n\tlet start = 0;\n\tlet end = array.length - 1;\n\tquickSortLast(array, start, end, animations);\n\treturn animations;\n}\n\nfunction quickSortLast(array, start, end, animations) {\n\tif (start >= end) {\n\t\treturn;\n\t}\n\tlet pivotIdx = partition(array, start, end, animations);\n\tquickSortLast(array, start, pivotIdx - 1, animations);\n\tquickSortLast(array, pivotIdx + 1, end, animations);\n}\n\nfunction partition(array, start, end, animations) {\n\tlet pivotValue = array[end];\n\tlet currentSmaller = start - 1;\n\twhile (start < end) {\n\t\tanimations.push([start, end]);\n\t\tanimations.push([start, end]);\n\t\tif (array[start] <= pivotValue) {\n\t\t\tcurrentSmaller += 1;\n\t\t\tanimations.push([start, array[currentSmaller]]);\n\t\t\tanimations.push([currentSmaller, array[start]]);\n\t\t\tlet tempx = array[currentSmaller];\n\t\t\tarray[currentSmaller] = array[start];\n\t\t\tarray[start] = tempx;\n\t\t} else {\n\t\t\tanimations.push([0, array[0]]);\n\t\t\tanimations.push([0, array[0]]);\n\t\t}\n\t\tstart += 1;\n\t}\n\tanimations.push([end, currentSmaller + 1]);\n\tanimations.push([end, currentSmaller + 1]);\n\tanimations.push([end, array[currentSmaller + 1]]);\n\tanimations.push([currentSmaller + 1, array[end]]);\n\tlet temp = array[currentSmaller + 1];\n\tarray[currentSmaller + 1] = pivotValue;\n\tarray[end] = temp;\n\treturn currentSmaller + 1;\n}\n","import React, { Component } from \"react\";\nimport { getMergeSortAnimations } from \"./Algorithms/MergeSort\";\nimport { getBubbleSortAnimations } from \"./Algorithms/BubbleSort\";\nimport { getSelectionSortAnimations } from \"./Algorithms/SelectionSort\";\nimport { getInsertionSortAnimations } from \"./Algorithms/InsertionSort\";\nimport { getShellSortAnimations } from \"./Algorithms/ShellSort\";\nimport { getQuickSortFirstAnimations } from \"./Algorithms/QuickSortFirst\";\nimport { getQuickSortLastAnimations } from \"./Algorithms/QuickSortLast\";\n\nclass SortingPanel extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsortingAlgo: \"\",\n\t\t};\n\t\tthis.handleSort = this.handleSort.bind(this);\n\t}\n\thandleSort(e) {\n\t\tconst sortingAlgo = e.target.value;\n\t\tthis.setState({\n\t\t\tsortingAlgo: sortingAlgo,\n\t\t});\n\t\tconst { onCompareColor, initialColor, speed, OriginalArray } =\n\t\t\tthis.props;\n\t\tconst arrayBars = document.getElementsByClassName(\"array-bar\");\n\t\tif (sortingAlgo === \"quickSortFirst\") {\n\t\t\tconst animatingArray = getQuickSortFirstAnimations(OriginalArray);\n\t\t\tfor (let i = 0; i < animatingArray.length; i++) {\n\t\t\t\tconst colorChange = i % 4 <= 1;\n\t\t\t\tif (colorChange) {\n\t\t\t\t\tconst [barOneIdx, barTwoIdx] = animatingArray[i];\n\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\n\t\t\t\t\tconst color = i % 4 === 0 ? onCompareColor : initialColor;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tconst [barOneIdx, newHeight] = animatingArray[i];\n\t\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\t\tbarOneStyle.height = `${newHeight}px`;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (sortingAlgo === \"quickSortLast\") {\n\t\t\tconst animatingArray = getQuickSortLastAnimations(OriginalArray);\n\t\t\tfor (let i = 0; i < animatingArray.length; i++) {\n\t\t\t\tconst colorChange = i % 4 <= 1;\n\t\t\t\tif (colorChange) {\n\t\t\t\t\tconst [barOneIdx, barTwoIdx] = animatingArray[i];\n\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\n\t\t\t\t\tconst color = i % 4 === 0 ? onCompareColor : initialColor;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tconst [barOneIdx, newHeight] = animatingArray[i];\n\t\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\t\tbarOneStyle.height = `${newHeight}px`;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (sortingAlgo === \"shellSort\") {\n\t\t\tconst animatingArray = getShellSortAnimations(OriginalArray);\n\t\t\tfor (let i = 0; i < animatingArray.length; i++) {\n\t\t\t\tconst colorChange = i % 4 <= 1;\n\t\t\t\tif (colorChange) {\n\t\t\t\t\tconst [barOneIdx, barTwoIdx] = animatingArray[i];\n\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\n\t\t\t\t\tconst color = i % 4 === 0 ? onCompareColor : initialColor;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tconst [barOneIdx, newHeight] = animatingArray[i];\n\t\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\t\tbarOneStyle.height = `${newHeight}px`;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (sortingAlgo === \"insertionSort\") {\n\t\t\tconst animatingArray = getInsertionSortAnimations(OriginalArray);\n\t\t\tfor (let i = 0; i < animatingArray.length; i++) {\n\t\t\t\tconst colorChange = i % 4 <= 1;\n\t\t\t\tif (colorChange) {\n\t\t\t\t\tconst [barOneIdx, barTwoIdx] = animatingArray[i];\n\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\n\t\t\t\t\tconst color = i % 4 === 0 ? onCompareColor : initialColor;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tconst [barOneIdx, newHeight] = animatingArray[i];\n\t\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\t\tbarOneStyle.height = `${newHeight}px`;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (sortingAlgo === \"selectionSort\") {\n\t\t\tconst animatingArray = getSelectionSortAnimations(OriginalArray);\n\t\t\tfor (let i = 0; i < animatingArray.length; i++) {\n\t\t\t\tconst colorChange = i % 4 <= 1;\n\t\t\t\tif (colorChange) {\n\t\t\t\t\tconst [barOneIdx, barTwoIdx] = animatingArray[i];\n\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\n\t\t\t\t\tconst color = i % 4 === 0 ? onCompareColor : initialColor;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tconst [barOneIdx, newHeight] = animatingArray[i];\n\t\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\t\tbarOneStyle.height = `${newHeight}px`;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (sortingAlgo === \"bubbleSort\") {\n\t\t\tconst animatingArray = getBubbleSortAnimations(OriginalArray);\n\t\t\tfor (let i = 0; i < animatingArray.length; i++) {\n\t\t\t\tconst colorChange = i % 4 <= 1;\n\t\t\t\tif (colorChange) {\n\t\t\t\t\tconst [barOneIdx, barTwoIdx] = animatingArray[i];\n\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\n\t\t\t\t\tconst color = i % 4 === 0 ? onCompareColor : initialColor;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tconst [barOneIdx, newHeight] = animatingArray[i];\n\t\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\t\tbarOneStyle.height = `${newHeight}px`;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst animatingArray = getMergeSortAnimations(OriginalArray);\n\t\t\tfor (let i = 0; i < animatingArray.length; i++) {\n\t\t\t\tconst colorChange = i % 3 !== 2;\n\t\t\t\tif (colorChange) {\n\t\t\t\t\tconst [barOneIdx, barTwoIdx] = animatingArray[i];\n\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\n\t\t\t\t\tconst color = i % 3 === 0 ? onCompareColor : initialColor;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tconst [barOneIdx, newHeight] = animatingArray[i];\n\t\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\t\tbarOneStyle.height = `${newHeight}px`;\n\t\t\t\t\t}, i * speed);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//CSS stuff\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container mb-3\">\n\t\t\t\t<div className=\"row shadow-sm justify-content-center pb-2\">\n\t\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"custom-range\"\n\t\t\t\t\t\t\t\tname=\"numInArray\"\n\t\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\t\tmin=\"5\"\n\t\t\t\t\t\t\t\tmax=\"150\"\n\t\t\t\t\t\t\t\tvalue={this.props.numInArray}\n\t\t\t\t\t\t\t\tonChange={(e) => this.props.handleSetting(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label>Array Size</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"custom-range\"\n\t\t\t\t\t\t\t\tname=\"speed\"\n\t\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t\t\tmax=\"100\"\n\t\t\t\t\t\t\t\tvalue={this.props.speed}\n\t\t\t\t\t\t\t\tonChange={(e) => this.props.handleSetting(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label>Animation Speed</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-lg\"\n\t\t\t\t\t\t\t\tonClick={this.props.handleReset}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tGenerate New Array\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-auto\">\n\t\t\t\t\t\t<div className=\"row align-items-start ml-3 my-4\">\n\t\t\t\t\t\t\t<div className=\"btn-group-md btn-group-vertical\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary \"\n\t\t\t\t\t\t\t\t\tvalue=\"mergeSort\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleSort(e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tMerge Sort\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t\t\tvalue=\"selectionSort\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleSort(e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSelection Sort\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"btn-groupd-md btn-group-vertical\"\n\t\t\t\t\t\t\t\trole=\"group\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t\t\tvalue=\"bubbleSort\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleSort(e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tBubble Sort\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t\t\tvalue=\"combSort\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleSort(e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tComb Sort\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"btn-groupd-md btn-group-vertical\"\n\t\t\t\t\t\t\t\trole=\"group\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t\t\tvalue=\"insertionSort\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleSort(e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tInsertion Sort\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t\t\tvalue=\"shellSort\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleSort(e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tShell Sort\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"btn-groupd-md btn-group-vertical\"\n\t\t\t\t\t\t\t\trole=\"group\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t\t\tvalue=\"quickSortFirst\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleSort(e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tQuick Sort(First Index)\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t\t\tvalue=\"quickSortLast\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleSort(e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tQuick Sort(Last Index)\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default SortingPanel;\n","export function getInsertionSortAnimations(array) {\n\tconst animations = [];\n\tinsertionSort(array, animations);\n\treturn animations;\n}\n\nfunction insertionSort(array, animations) {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tfor (let j = i; j > 0; j--) {\n\t\t\tif (array[j] < array[j - 1]) {\n\t\t\t\tanimations.push([j, j - 1]);\n\t\t\t\tanimations.push([j, j - 1]);\n\t\t\t\tanimations.push([j - 1, array[j]]);\n\t\t\t\tanimations.push([j, array[j - 1]]);\n\t\t\t\tlet temp = array[j];\n\t\t\t\tarray[j] = array[j - 1];\n\t\t\t\tarray[j - 1] = temp;\n\t\t\t}\n\t\t}\n\t}\n}\n","export function getSelectionSortAnimations(array) {\n\tconst animations = [];\n\tselectionSort(array, animations);\n\treturn animations;\n}\n\nfunction selectionSort(array, animations) {\n\tfor (let i = 0; i < array.length - 1; i++) {\n\t\tlet smallest = array[i];\n\t\tlet smallestIdx = i;\n\t\tfor (let j = i + 1; j < array.length; j++) {\n\t\t\tanimations.push([smallestIdx, j]);\n\t\t\tanimations.push([smallestIdx, j]);\n\t\t\tanimations.push([0, array[0]]);\n\t\t\tanimations.push([0, array[0]]);\n\t\t\tif (array[j] < smallest) {\n\t\t\t\t//updates the smallest element and its index\n\t\t\t\tsmallest = array[j];\n\t\t\t\tsmallestIdx = j;\n\t\t\t}\n\t\t}\n\t\tanimations.push([i, smallestIdx]);\n\t\tanimations.push([i, smallestIdx]);\n\t\tanimations.push([i, smallest]);\n\t\tanimations.push([smallestIdx, array[i]]);\n\t\tlet temp = array[i];\n\t\tarray[i] = smallest;\n\t\tarray[smallestIdx] = temp;\n\t}\n}\n","export function getBubbleSortAnimations(array) {\n\tconst animations = [];\n\tbubbleSort(array, animations);\n\treturn animations;\n}\n\nfunction bubbleSort(array, animations) {\n\tlet end = array.length - 1;\n\twhile (end >= 1) {\n\t\tfor (let j = 0; j < end; j++) {\n\t\t\tif (array[j] > array[j + 1]) {\n\t\t\t\tanimations.push([j, j + 1]);\n\t\t\t\tanimations.push([j, j + 1]);\n\t\t\t\tanimations.push([j, array[j + 1]]);\n\t\t\t\tanimations.push([j + 1, array[j]]);\n\t\t\t\tlet temp = array[j];\n\t\t\t\tarray[j] = array[j + 1];\n\t\t\t\tarray[j + 1] = temp;\n\t\t\t}\n\t\t}\n\t\tend--;\n\t}\n}\n","import React from \"react\";\n\nfunction SortingShow(props) {\n\tconst { OriginalArray, initialColor } = props;\n\treturn (\n\t\t<div\n\t\t\tclassName=\"array-container d-flex flex-row justify-content-center align-items-end col-auto\"\n\t\t\tstyle={{ height: \"400px\", width: \"1200px\" }}\n\t\t>\n\t\t\t{OriginalArray.map((item, index) => (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"array-bar\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight: `${item}px`,\n\t\t\t\t\t\twidth: \"20px\",\n\t\t\t\t\t\tmargin: \"0 1px\",\n\t\t\t\t\t\tbackgroundColor: `${initialColor}`,\n\t\t\t\t\t}}\n\t\t\t\t\tkey={index}\n\t\t\t\t></div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default SortingShow;\n","import React, { Component } from \"react\";\nimport SortingPanel from \"./SortingPanel\";\nimport SortingShow from \"./SortingShow\";\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tOriginalArray: [],\n\t\t\tnumInArray: 75,\n\t\t\tspeed: 1,\n\t\t\tinitialColor: \"black\",\n\t\t\tonCompareColor: \"red\",\n\t\t\tcurrentAlgo: \"\",\n\t\t};\n\t\tthis.handleReset = this.handleReset.bind(this);\n\t\tthis.handleSetting = this.handleSetting.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\tthis.handleReset();\n\t}\n\thandleSetting(e) {\n\t\tconst name = e.target.name;\n\t\tconst value = e.target.value;\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t});\n\t\tthis.handleReset();\n\t}\n\thandleReset() {\n\t\tconst newArray = [];\n\t\tfor (let i = 0; i < this.state.numInArray; i++) {\n\t\t\tnewArray.push(randomIntFromInterval(5, 400));\n\t\t}\n\t\tthis.setState({\n\t\t\tOriginalArray: newArray,\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t{/* navbar here */}\n\t\t\t\t<nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n\t\t\t\t\t<a className=\"navbar-brand\" href=\"/\">\n\t\t\t\t\t\tSorting Algorithm Visualization\n\t\t\t\t\t</a>\n\t\t\t\t\t<div className=\"navbar-nav ml-auto\">\n\t\t\t\t\t\t<div className=\"nav-item \">\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclassName=\"nav-link \"\n\t\t\t\t\t\t\t\thref=\"https://github.com/AdityaPrakash-26/sorting-visualizer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSource Code\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\t\t\t\t{/* navbar ends */}\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<SortingShow\n\t\t\t\t\tOriginalArray={this.state.OriginalArray}\n\t\t\t\t\tinitialColor={this.state.initialColor}\n\t\t\t\t/>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<SortingPanel\n\t\t\t\t\thandleReset={this.handleReset}\n\t\t\t\t\thandleSetting={this.handleSetting}\n\t\t\t\t\tnumInArray={this.state.numInArray}\n\t\t\t\t\tonCompareColor={this.state.onCompareColor}\n\t\t\t\t\tinitialColor={this.state.initialColor}\n\t\t\t\t\tspeed={this.state.speed}\n\t\t\t\t\tOriginalArray={this.state.OriginalArray}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n\t// min and max included\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}